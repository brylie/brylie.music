---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";
import type { ImageMetadata } from "astro";
import FallbackImage from "../assets/blog-placeholder-1.jpg";
import { SITE_TITLE } from "../consts";

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata;
  ogImage?: ImageMetadata; // Separate Open Graph image
  keywords?: string[]; // SEO keywords
  canonicalURL?: string; // Custom canonical URL
  robots?: string; // Custom robots directive
  author?: string; // Article author
  pubDate?: Date; // Publication date for articles
  updatedDate?: Date; // Last updated date for articles
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const customCanonicalURL = Astro.props.canonicalURL
  ? new URL(Astro.props.canonicalURL)
  : canonicalURL;

const {
  title,
  description,
  image = FallbackImage,
  ogImage,
  keywords,
  robots,
  author,
  pubDate,
  updatedDate,
} = Astro.props;

// Use ogImage if provided, otherwise fall back to image
const socialImage = ogImage || image;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={new URL("rss.xml", Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={customCanonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
{keywords && <meta name="keywords" content={keywords.join(", ")} />}
{robots && <meta name="robots" content={robots} />}
{author && <meta name="author" content={author} />}
{
  pubDate && (
    <meta name="article:published_time" content={pubDate.toISOString()} />
  )
}
{
  updatedDate && (
    <meta name="article:modified_time" content={updatedDate.toISOString()} />
  )
}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={pubDate ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(socialImage.src, Astro.url)} />
{author && <meta property="article:author" content={author} />}
{
  pubDate && (
    <meta property="article:published_time" content={pubDate.toISOString()} />
  )
}
{
  updatedDate && (
    <meta
      property="article:modified_time"
      content={updatedDate.toISOString()}
    />
  )
}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(socialImage.src, Astro.url)} />
